services:
  # Nextcloud Docker Application
  nextcloud:
    # NOTE for occ use: for LinuxServer image, occ is directly accessible from the container shell e.g. docker exec -it nextcloud occ [command]
    image: linuxserver/nextcloud:latest
    container_name: nextcloud
    hostname: nextcloud
    restart: unless-stopped
    #security_opt:
    #  - no-new-privileges:true
    networks:
      - traefik_network
      - nextcloud
      - redis
    #ports:
    #  - $NEXTCLOUD_PORT_LINUX:443
    # Persistent volumes with bind mounts to easily move/backup data
    volumes:
      - /$DOCKERDIR/appdata/nextcloud:/config
      - /$NEXTCLOUDDIR:/data
    secrets:
      - db_root_password
      - db_password
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      REDIS_HOST: redis
      REDIS_HOST_PASSWORD: $REDIS_PASSWORD
      NEXTCLOUD_TRUSTED_DOMAIN: nextcloud.$DOMAINNAME0
      TRUSTED_PROXIES: 192.168.90.0/24 # coming from traefik network traefik_network
      MYSQL_USER: nextcloud
      MYSQL_DATABASE: nextcloud
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.nextcloud-rtr.entrypoints=https"
      - "traefik.http.routers.nextcloud-rtr.rule=Host(`nextcloud.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.nextcloud-rtr.middlewares=chain-nextcloud@file"
      ## HTTP Services
      - "traefik.http.routers.nextcloud-rtr.service=nextcloud-svc"
      - "traefik.http.services.nextcloud-svc.loadbalancer.server.port=443"
      - "traefik.http.services.nextcloud-svc.loadbalancer.server.scheme=https" # specific to NextCloud because container uses https by default
      - "traefik.http.services.nextcloud-svc.loadbalancer.serverstransport=ignorecert@file" # specific to NextCloud because container uses self-signed certs