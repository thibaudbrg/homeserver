services:
  # Wireguard VPN - GUI Interface
  wg-easy:
    image: ghcr.io/wg-easy/wg-easy
    container_name: wg-easy
    security_opt:
      - no-new-privileges:true
    networks:
      traefik_network:
      wg-easy:
        ipv4_address: 192.168.93.2
    restart: always
    environment:
      WG_HOST: $DOMAINNAME1
      WG_PORT: 6006
      WG_DEFAULT_DNS: 1.1.1.1
      WG_DEFAULT_ADDRESS: 192.168.94.x
      WG_ALLOWED_IPS: 0.0.0.0/0, ::/0
      WG_PRE_UP: iptables -t nat -A POSTROUTING -j MASQUERADE -o eth0
      WG_PRE_DOWN: iptables -t nat -D POSTROUTING -j MASQUERADE -o eth0
      # Using two networks within docker leads to two network interfaces eth0 and eth1 --> to correct the interface:
      WG_POST_UP: >
        iptables -t nat -A POSTROUTING -s 0.0.0.0/0 -o eth1 -j MASQUERADE;
        iptables -A INPUT -p udp -m udp --dport 6006 -j ACCEPT;
        iptables -A FORWARD -i wg0 -j ACCEPT;
        iptables -A FORWARD -o wg0 -j ACCEPT;
    volumes:
      - $DOCKERDIR/appdata/wg-easy:/etc/wireguard
    ports:
      - "6006:6006/udp"
      # - "51821:51821/tcp" # GUI for wg-easy
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.wg-easy-rtr.entrypoints=https"
      - "traefik.http.routers.wg-easy-rtr.rule=Host(`wireguard.$DOMAINNAME0`)"
      ## Middlewares
      - "traefik.http.routers.wg-easy-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.wg-easy-rtr.service=wg-easy-svc"
      - "traefik.http.services.wg-easy-svc.loadbalancer.server.port=51821" # GUI
